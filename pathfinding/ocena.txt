*[1p] cz.2
	- rozmiar planszy 9x9
 	- baza siedmu kolorów - z niej losujemy (za każdym razem trzy kule) [00:00 - 00:05]
 	- kliknięcie kulki zatwierdza jej wybór, ponowne "odtwierdza" [00:06 - 00:09]
 	- kliknięcie innej kulki (po juz zatwierdzonej) zmienia wybór [00:10 - 00:12]
	- przesunięcie kulki z obszaru "otwartego" do "zamkniętego" [00:28 - 00:31]
 	- odwrotna sytuacja do powyższej (brak możliwości wybrania takiej kulki) [00:18 - 00:21]
 	- kliknięcie w inne pole/kulkę podczas trwania "przesuwania" - zblokowane
[max. 2p] cz.3
	*[1p]
		- preview kolejnych trzech kulek, które zostaną dodane na plansze [cały czas podczas filmu - lewa strona]
		- ich dodawanie co ruch (docelowo dodatkowy ruch gdy zbijemy)
		- możliwość akceptacji przesunięcia kulki tylko do miejsca dostępnego dla niej
		- wybór innej kuli / odznaczenie - usunięcie proponowanej ścieżki [00:22-00:27]
	*[1p]
		- preview trasy kulki przy najechaniu na dostępne pole (do którego może kulka przejść [no. 00:02-00:14])
			uwaga: [00:16] - może nie podświetlać ścieżki w przypadku jej nieistnienia (u mnie zaznacza ostatnią możliwą)
		- pamiętaj by po najechaniu był preview ścieżki + kolorowy ślad (gdy nie masz przemieszczania też dodaj), gdy ślad to zablokuj interakcję

*[1p] cz.4
	- zbijanie minimum pięciu kul we wszystkich kierunkach
	- punkty (każda zbita kula - 1p) + zakończenie (np. informacja o uzyskanych punktach/czasie gry itp.)

	
Od strony kodu (Typescript):
*[2p] cz.1
	- pisząc w TS zaiplementuj dowolony algortm najkrótszej ścieżki z punktu A do B "na szachownicy".
		zastosuj: typowania/inferencje (pamiętaj o typach HTML...., unikaj typu any), funkcje/metody, klasa/klasy
*[1p] cz.2
	- dodaj interfejsy, co najmniej jako implementacja w klasie i dwa innego typu
	- w klasach stosuj:
		zasięgi (public/private/protected)
		modyfikator readonly
		właściwości/metody statyczne (o ile to możliwe / nie "rozwali" kodu)
*[1p] cz.3
	- podziel swój projekt na kilka plików (używaj modułów do importu/exportu potrzebnych "danych").
*[1p] cz.4
	- utwórz dokumentację projektu - opisz swoje struktury kodu (stosuj bloki, @module, @param, @returns, @todo, inne wg. potrzeby)

SUMA PUNKTÓW: 9p